services:
  nginx:
    image: nginx:latest
    container_name: nginx-backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - backend

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $!; done;'"
  
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi-backend
    environment:
      - DATABASE_URI=postgresql://postgres:123@postgres_db:5432/multi_tenant_admin
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-ap-south-1}
      - HF_API_TOKEN=${HF_API_TOKEN}
      - CHROMA_DIR=/app/chroma_db
    volumes:
      - ./uploads:/app/uploads
      - chroma_data:/app/chroma_db
    depends_on:
      - postgres_db
      - chroma_db

  postgres_db:
    image: postgres:15
    container_name: postgres_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=multi_tenant_admin
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      
  chroma_db:
    image: ghcr.io/chroma-core/chroma:latest
    container_name: chroma_db
    volumes:
      - chroma_data:/chroma
      
volumes:
  postgres_data:
  chroma_data:
